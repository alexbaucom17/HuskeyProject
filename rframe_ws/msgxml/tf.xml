<!--
 
  AUTOGENERATED FILE:   do not edit

  Generated by:         alex on alex-laptop, 2016-12-05 12:07:35 -0500
  From Template/Script: rosToXML.rb
 

-->
<classes library_name="tf_gencpp" namespace="tf" >

<class name="tfMessage" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="94810edda583a504dfda3829e70d7eec" rosDesc="geometry_msgs/TransformStamped[] transforms\n\n================================================================================\nMSG: geometry_msgs/TransformStamped\n# This expresses a transform from coordinate frame header.frame_id\n# to the coordinate frame child_frame_id\n#\n# This message is mostly used by the \n# &lt;a href=\&quot;http://wiki.ros.org/tf\&quot;&gt;tf&lt;/a&gt; package. \n# See its documentation for more information.\n\nHeader header\nstring child_frame_id # the frame id of the child frame\nTransform transform\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called &apos;secs&apos;)\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called &apos;nsecs&apos;)\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Transform\n# This represents the transform between two coordinate frames in free space.\n\nVector3 translation\nQuaternion rotation\n\n================================================================================\nMSG: geometry_msgs/Vector3\n# This represents a vector in free space. \n# It is only meant to represent a direction. Therefore, it does not\n# make sense to apply a translation to it (e.g., when applying a \n# generic rigid transformation to a Vector3, tf2 will only apply the\n# rotation). If you want your data to be translatable too, use the\n# geometry_msgs/Point message instead.\n\nfloat64 x\nfloat64 y\nfloat64 z\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n" comment="" >
  <field name="transforms" type="vector(geometry_msgs::TransformStamped)"  sourceType="geometry_msgs::TransformStamped" comment="" />
</class>

<class name="FrameGraphRequest" publicDataMembers="true" sourceIDL="ROS" ros="true" comment="" >
</class>

<class name="FrameGraphResponse" publicDataMembers="true" sourceIDL="ROS" ros="true" comment="" >
  <field name="dot_graph" type="string"  sourceType="string" comment="" />
</class>

<class name="FrameGraph" publicDataMembers="true" sourceIDL="ROS" ros="true" comment="" >
  <definition name="Request" type="FrameGraphRequest" />
  <definition name="Response" type="FrameGraphResponse" />
  <field name="request" type="Request" comment="request data type"/>
  <field name="response" type="Response" comment="response data type" />
</class>

<dependency name="geometry_msgs_gencpp"/>
<dependency name="std_msgs_gencpp"/>
<dependency name="std_srvs_gencpp"/>

</classes>
