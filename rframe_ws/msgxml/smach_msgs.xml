<!--
 
  AUTOGENERATED FILE:   do not edit

  Generated by:         yongbo on yongbo-XPS-15-9550, 2017-01-26 15:31:51 -0500
  From Template/Script: rosToXML.rb
 

-->
<classes library_name="smach_msgs_gencpp" namespace="smach_msgs" >

<class name="SmachContainerInitialStatusCmd" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="45f8cf31fc29b829db77f23001f788d6" rosDesc="# The path to the node in the server\nstring path\n\n# The desired initial state(s)\nstring[] initial_states\n\n# Initial values for the local user data of the state machine\n# A pickled user data structure\n# i.e. the UserData&apos;s internal dictionary\nstring local_data\n" comment="The path to the node in the server" >
  <field name="path" type="string"  sourceType="string" comment="The desired initial state(s)" />
  <field name="initial_states" type="vector(string)"  sourceType="string" comment="Initial values for the local user data of the state machine
 A pickled user data structure
 i.e. the UserData&apos;s internal dictionary" />
  <field name="local_data" type="string"  sourceType="string" comment="" />
</class>

<class name="SmachContainerStatus" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="5ba2bb79ac19e3842d562a191f2a675b" rosDesc="Header header\n\n# The path to this node in the server\nstring path\n\n# The initial state description\n# Effects an arc from the top state to each one\nstring[] initial_states\n\n# The current state description\nstring[] active_states\n\n# A pickled user data structure\n# i.e. the UserData&apos;s internal dictionary\nstring local_data\n\n# Debugging info string\nstring info\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called &apos;secs&apos;)\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called &apos;nsecs&apos;)\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n" comment="" >
  <field name="header" type="std_msgs::Header"  sourceType="Header" comment="The path to this node in the server" />
  <field name="path" type="string"  sourceType="string" comment="The initial state description
 Effects an arc from the top state to each one" />
  <field name="initial_states" type="vector(string)"  sourceType="string" comment="The current state description" />
  <field name="active_states" type="vector(string)"  sourceType="string" comment="A pickled user data structure
 i.e. the UserData&apos;s internal dictionary" />
  <field name="local_data" type="string"  sourceType="string" comment="Debugging info string" />
  <field name="info" type="string"  sourceType="string" comment="" />
</class>

<class name="SmachContainerStructure" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="3d3d1e0d0f99779ee9e58101a5dcf7ea" rosDesc="Header header\n\n# The path to this node in the server\nstring path\n\n# The children of this node\nstring[] children\n\n# The outcome edges\n# Each index across these arrays denote one edge\nstring[] internal_outcomes\nstring[] outcomes_from\nstring[] outcomes_to\n\n# The potential outcomes from this container\nstring[] container_outcomes\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called &apos;secs&apos;)\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called &apos;nsecs&apos;)\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n" comment="" >
  <field name="header" type="std_msgs::Header"  sourceType="Header" comment="The path to this node in the server" />
  <field name="path" type="string"  sourceType="string" comment="The children of this node" />
  <field name="children" type="vector(string)"  sourceType="string" comment="The outcome edges
 Each index across these arrays denote one edge" />
  <field name="internal_outcomes" type="vector(string)"  sourceType="string" comment="" />
  <field name="outcomes_from" type="vector(string)"  sourceType="string" comment="" />
  <field name="outcomes_to" type="vector(string)"  sourceType="string" comment="The potential outcomes from this container" />
  <field name="container_outcomes" type="vector(string)"  sourceType="string" comment="" />
</class>

<dependency name="std_msgs_gencpp"/>
<dependency name="std_srvs_gencpp"/>

</classes>
