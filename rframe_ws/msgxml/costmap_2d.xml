<!--
 
  AUTOGENERATED FILE:   do not edit

  Generated by:         alex on alex-laptop, 2017-01-26 12:56:30 -0500
  From Template/Script: rosToXML.rb
 

-->
<classes library_name="costmap_2d_gencpp" namespace="costmap_2d" >

<class name="VoxelGrid" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="48a040827e1322073d78ece5a497029c" rosDesc="Header header\nuint32[] data\ngeometry_msgs/Point32 origin\ngeometry_msgs/Vector3 resolutions\nuint32 size_x\nuint32 size_y\nuint32 size_z\n\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called &apos;secs&apos;)\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called &apos;nsecs&apos;)\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Point32\n# This contains the position of a point in free space(with 32 bits of precision).\n# It is recommeded to use Point wherever possible instead of Point32.  \n# \n# This recommendation is to promote interoperability.  \n#\n# This message is designed to take up less space when sending\n# lots of points at once, as in the case of a PointCloud.  \n\nfloat32 x\nfloat32 y\nfloat32 z\n================================================================================\nMSG: geometry_msgs/Vector3\n# This represents a vector in free space. \n# It is only meant to represent a direction. Therefore, it does not\n# make sense to apply a translation to it (e.g., when applying a \n# generic rigid transformation to a Vector3, tf2 will only apply the\n# rotation). If you want your data to be translatable too, use the\n# geometry_msgs/Point message instead.\n\nfloat64 x\nfloat64 y\n" comment="" >
  <field name="header" type="std_msgs::Header"  sourceType="Header" comment="" />
  <field name="data" type="vector(unsigned int)"  sourceType="uint32" comment="" />
  <field name="origin" type="geometry_msgs::Point32"  sourceType="geometry_msgs::Point32" comment="" />
  <field name="resolutions" type="geometry_msgs::Vector3"  sourceType="geometry_msgs::Vector3" comment="" />
  <field name="size_x" type="unsigned int"  sourceType="uint32" comment="" />
  <field name="size_y" type="unsigned int"  sourceType="uint32" comment="" />
  <field name="size_z" type="unsigned int"  sourceType="uint32" comment="" />
</class>

<dependency name="geometry_msgs_gencpp"/>
<dependency name="std_msgs_gencpp"/>
<dependency name="std_srvs_gencpp"/>

</classes>
