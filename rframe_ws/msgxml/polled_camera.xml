<!--
 
  AUTOGENERATED FILE:   do not edit

  Generated by:         yongbo on yongbo-XPS-15-9550, 2017-01-26 15:56:59 -0500
  From Template/Script: rosToXML.rb
 

-->
<classes library_name="polled_camera_gencpp" namespace="polled_camera" >

<class name="GetPolledImageRequest" publicDataMembers="true" sourceIDL="ROS" ros="true" comment="Namespace to publish response topics in. A polled camera driver node
 should publish:
   &lt;response_namespace&gt;/image_raw
   &lt;response_namespace&gt;/camera_info" >
  <field name="response_namespace" type="string"  sourceType="string" comment="Timeout for attempting to capture data from the device. This does not
 include latency from ROS communication, post-processing of raw camera
 data, etc. A zero duration indicates no time limit." />
  <field name="timeout" type="std_msgs::RosDuration"  sourceType="duration" comment="Binning settings, if supported by the camera." />
  <field name="binning_x" type="unsigned int"  sourceType="uint32" comment="" />
  <field name="binning_y" type="unsigned int"  sourceType="uint32" comment="Region of interest, if supported by the camera." />
  <field name="roi" type="sensor_msgs::RegionOfInterest"  sourceType="sensor_msgs::RegionOfInterest" comment="no comment provided" />
</class>

<class name="GetPolledImageResponse" publicDataMembers="true" sourceIDL="ROS" ros="true" comment="Namespace to publish response topics in. A polled camera driver node
 should publish:
   &lt;response_namespace&gt;/image_raw
   &lt;response_namespace&gt;/camera_info" >
  <field name="success" type="bool"  sourceType="bool" comment="Could the image be captured?" />
  <field name="status_message" type="string"  sourceType="string" comment="Error message in case of failure" />
  <field name="stamp" type="std_msgs::RosTime"  sourceType="time" comment="Timestamp of the captured image. Can be matched
 against incoming sensor_msgs/Image header." />
</class>

<class name="GetPolledImage" publicDataMembers="true" sourceIDL="ROS" ros="true" comment="Namespace to publish response topics in. A polled camera driver node
 should publish:
   &lt;response_namespace&gt;/image_raw
   &lt;response_namespace&gt;/camera_info" >
  <definition name="Request" type="GetPolledImageRequest" />
  <definition name="Response" type="GetPolledImageResponse" />
  <field name="request" type="Request" comment="request data type"/>
  <field name="response" type="Response" comment="response data type" />
</class>

<dependency name="sensor_msgs_gencpp"/>
<dependency name="std_msgs_gencpp"/>
<dependency name="std_srvs_gencpp"/>

</classes>
