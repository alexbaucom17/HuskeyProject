<!--
 
  AUTOGENERATED FILE:   do not edit

  Generated by:         yongbo on yongbo-XPS-15-9550, 2017-01-26 15:31:52 -0500
  From Template/Script: rosToXML.rb
 

-->
<classes library_name="theora_image_transport_gencpp" namespace="theora_image_transport" >

<class name="Packet" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="33ac4e14a7cff32e7e0d65f18bb410f3" rosDesc="# ROS message adaptation of the ogg_packet struct from libogg,\n# see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html.\n\nHeader header     # Original sensor_msgs/Image header\nuint8[] data      # Raw Theora packet data (combines packet and bytes fields from ogg_packet)\nint32 b_o_s       # Flag indicating whether this packet begins a logical bitstream\nint32 e_o_s       # Flag indicating whether this packet ends a bitstream\nint64 granulepos  # A number indicating the position of this packet in the decoded data\nint64 packetno    # Sequential number of this packet in the ogg bitstream\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called &apos;secs&apos;)\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called &apos;nsecs&apos;)\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n" comment="ROS message adaptation of the ogg_packet struct from libogg,
 see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html." >
  <field name="header" type="std_msgs::Header"  sourceType="Header" comment="Original sensor_msgs/Image header" />
  <field name="data" type="vector(unsigned char)"  sourceType="uint8" comment="Raw Theora packet data (combines packet and bytes fields from ogg_packet)" />
  <field name="b_o_s" type="int"  sourceType="int32" comment="Flag indicating whether this packet begins a logical bitstream" />
  <field name="e_o_s" type="int"  sourceType="int32" comment="Flag indicating whether this packet ends a bitstream" />
  <field name="granulepos" type="long long int"  sourceType="int64" comment="A number indicating the position of this packet in the decoded data" />
  <field name="packetno" type="long long int"  sourceType="int64" comment="Sequential number of this packet in the ogg bitstream" />
</class>

<dependency name="std_msgs_gencpp"/>
<dependency name="std_srvs_gencpp"/>

</classes>
