<!--
 
  AUTOGENERATED FILE:   do not edit

  Generated by:         alex on alex-laptop, 2016-12-05 12:07:30 -0500
  From Template/Script: rosToXML.rb
 

-->
<classes library_name="rosgraph_msgs_gencpp" namespace="rosgraph_msgs" >

<class name="Clock" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="a9c97c1d230cfc112e270351a944ee47" rosDesc="# roslib/Clock is used for publishing simulated time in ROS. \n# This message simply communicates the current time.\n# For more information, see http://www.ros.org/wiki/Clock\ntime clock\n" comment="roslib/Clock is used for publishing simulated time in ROS. 
 This message simply communicates the current time.
 For more information, see http://www.ros.org/wiki/Clock" >
  <field name="clock" type="std_msgs::RosTime"  sourceType="time" comment="" />
</class>

<class name="Log" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="acffd30cd6b6de30f120938c17c593fb" rosDesc="##\n## Severity level constants\n##\nbyte DEBUG=1 #debug level\nbyte INFO=2  #general level\nbyte WARN=4  #warning level\nbyte ERROR=8 #error level\nbyte FATAL=16 #fatal/critical level\n##\n## Fields\n##\nHeader header\nbyte level\nstring name # name of the node\nstring msg # message \nstring file # file the message came from\nstring function # function the message came from\nuint32 line # line the message came from\nstring[] topics # topic names that the node publishes\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called &apos;secs&apos;)\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called &apos;nsecs&apos;)\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n" comment="" >
  <constant init="1" name="DEBUG" type="char"  sourceType="byte" comment="debug level" />
  <constant init="2" name="INFO" type="char"  sourceType="byte" comment="general level" />
  <constant init="4" name="WARN" type="char"  sourceType="byte" comment="warning level" />
  <constant init="8" name="ERROR" type="char"  sourceType="byte" comment="error level" />
  <constant init="16" name="FATAL" type="char"  sourceType="byte" comment="fatal/critical level" />
  <field name="header" type="std_msgs::Header"  sourceType="Header" comment="" />
  <field name="level" type="char"  sourceType="byte" comment="" />
  <field name="name" type="string"  sourceType="string" comment="name of the node" />
  <field name="msg" type="string"  sourceType="string" comment="message" />
  <field name="file" type="string"  sourceType="string" comment="file the message came from" />
  <field name="function" type="string"  sourceType="string" comment="function the message came from" />
  <field name="line" type="unsigned int"  sourceType="uint32" comment="line the message came from" />
  <field name="topics" type="vector(string)"  sourceType="string" comment="topic names that the node publishes" />
</class>

<class name="TopicStatistics" publicDataMembers="true" sourceIDL="ROS" ros="true" rosMD5="10152ed868c5097a5e2e4a89d7daa710" rosDesc="# name of the topic\nstring topic\n\n# node id of the publisher\nstring node_pub\n\n# node id of the subscriber\nstring node_sub\n\n# the statistics apply to this time window\ntime window_start\ntime window_stop\n\n# number of messages delivered during the window\nint32 delivered_msgs\n# numbers of messages dropped during the window\nint32 dropped_msgs\n\n# traffic during the window, in bytes\nint32 traffic\n\n# mean/stddev/max period between two messages\nduration period_mean\nduration period_stddev\nduration period_max\n\n# mean/stddev/max age of the message based on the\n# timestamp in the message header. In case the\n# message does not have a header, it will be 0.\nduration stamp_age_mean\nduration stamp_age_stddev\nduration stamp_age_max\n" comment="name of the topic" >
  <field name="topic" type="string"  sourceType="string" comment="node id of the publisher" />
  <field name="node_pub" type="string"  sourceType="string" comment="node id of the subscriber" />
  <field name="node_sub" type="string"  sourceType="string" comment="the statistics apply to this time window" />
  <field name="window_start" type="std_msgs::RosTime"  sourceType="time" comment="" />
  <field name="window_stop" type="std_msgs::RosTime"  sourceType="time" comment="number of messages delivered during the window" />
  <field name="delivered_msgs" type="int"  sourceType="int32" comment="numbers of messages dropped during the window" />
  <field name="dropped_msgs" type="int"  sourceType="int32" comment="traffic during the window, in bytes" />
  <field name="traffic" type="int"  sourceType="int32" comment="mean/stddev/max period between two messages" />
  <field name="period_mean" type="std_msgs::RosDuration"  sourceType="duration" comment="" />
  <field name="period_stddev" type="std_msgs::RosDuration"  sourceType="duration" comment="" />
  <field name="period_max" type="std_msgs::RosDuration"  sourceType="duration" comment="mean/stddev/max age of the message based on the
 timestamp in the message header. In case the
 message does not have a header, it will be 0." />
  <field name="stamp_age_mean" type="std_msgs::RosDuration"  sourceType="duration" comment="" />
  <field name="stamp_age_stddev" type="std_msgs::RosDuration"  sourceType="duration" comment="" />
  <field name="stamp_age_max" type="std_msgs::RosDuration"  sourceType="duration" comment="" />
</class>

<dependency name="std_msgs_gencpp"/>
<dependency name="std_srvs_gencpp"/>

</classes>
