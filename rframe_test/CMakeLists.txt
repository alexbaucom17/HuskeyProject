# 
#  this notice is just to let you know this file was created by
#  a helper script, you may edit this file.
#
#  Generated by:         alex on alex-laptop, 2016-11-23 12:40:30 -0500
#  From Template/Script: no template
 
#  CTA RIGHTS
#  
#  This document contains information proprietary to General Dynamics
#  Robotic Systems and is not to be reproduced, transmitted, transferred,
#  or otherwise used without the express written consent of General
#  Dynamics Robotic Systems except as described below.
#  
#  GOVERNMENT PURPOSE RIGHTS
#  
#  Contract No.:        W911NF-10-2-0016, Articles of Collaboration,
#                       Article 5, Intellectual Property
#  Contractor Name:     General Dynamics Robotic Systems, Inc. (GDRS)
#  Contractor Address:  1231 Tech Court, Westminster, MD  21157
#  
#  Expiration Date - None
#  
#  Technical data and computer software first created by Member(s) in
#  performance of the Agreement will be disclosed to the Government.
#  General Dynamics Robotic Systems retains the entire right, title, and
#  interest throughout the world to each subject invention subject to the
#  provisions of this clause and 37 CFR Part 401, 32 CFR 32.36, and
#  34 CFR 34.25. The Government shall have the right to obtain, reproduce,
#  publish or otherwise use the work for Government purposes.
#  
#  
#  NON-EXCLUSIVE LICENSE TO CONSORTIUM PARTICIPANTS
#  Consortium Members and subawardees are defined as 'Participants'
#  Under Article 5.3, Participants are granted a nonexclusive, royalty-
#  free, non-sublicenseable, non-assignable, license to Consortium
#  Intellectual Property for the limited purpose of performing tasks under
#  The Cooperative Agreement, for Government purposes only, and to make and
#  have the same made solely for such use.

cmake_minimum_required(VERSION 2.8)

# set project name, and tell CMake that it is C++ code
# IMPORTANT: cmake will NOT built files ending in .c or .C when in C++ mode
#            all your files must end with .cc, or .cpp
project(mypackage CXX)

SET(CPACK_PACKAGE_VERSION_MAJOR "1")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION_PATCH "0")

# if the user has not provided the install prefix, set a default
if (NOT RFRAME_INSTALL_PREFIX)
  set(RFRAME_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/../..)
endif()

# add rframe to cmake module search path
set(CMAKE_MODULE_PATH "${RFRAME_INSTALL_PREFIX}/rframebuild/cmake")
# include rframe system macros, functions, includes etc.
include(rframe)
# include world model definitions
include(worldmodel)

# allow this repo to find headers within itself prior to searching installed locations
include_directories( BEFORE .. )

# set install location for the bin, lib, include directories
# it is relative to this tree so that multiple trees may be in use, 
# for example, dev tree, integration tree, demo tree, etc...
set(CMAKE_INSTALL_PREFIX ${RFRAME_INSTALL_PREFIX} )

## auto added by rframeCreateModule.rb

add_library(Talker SHARED Talker.cpp)
target_link_libraries(Talker ${RFRAME_LIBS} 
)
install(TARGETS Talker DESTINATION lib )

# auto added by rframeCreateModule.rb

add_library(Listener SHARED Listener.cpp)
target_link_libraries(Listener ${RFRAME_LIBS} 
)
install(TARGETS Listener DESTINATION lib )


install(FILES talker.cfg DESTINATION bin/config)
install(FILES listener.cfg DESTINATION bin/config)


# this function imports ros .msg and .srv into rframe xml. In this case it searches the ros jade install, and outputs the xml and rframe cmake commands to the "msgxml" subdirectory of this project
ros_code_gen_search(SEARCH_PATH /opt/ros/jade DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/msgxml)
add_subdirectory(msgxml)


